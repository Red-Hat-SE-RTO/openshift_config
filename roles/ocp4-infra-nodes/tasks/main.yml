---
# https://access.redhat.com/solutions/5034771

# If we're using machinesets, this creates the infra machineset
# https://access.redhat.com/documentation/en-us/openshift_container_platform/4.14/html-single/machine_management/index#creating-infrastructure-machinesets
- name: Create an infrastructure node machine set
  when: machineset_item.type in ["infra"]
  kubernetes.core.k8s:
    kind: MachineSet
    state: present
    template: infra-machineset.yaml.j2
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3
  loop: "{{ machine_sets }}"
  loop_control:
    loop_var: machineset_item

# If we're not using machinesets, this labels existing nodes
- name: Add the infra node label for the Infrastructure Nodes
  when: node_item.type in ["infra"]
  kubernetes.core.k8s:
    kind: Node
    api_version: v1
    name: "{{ node_item.name }}"
    merge_type:
      - strategic-merge
      - merge
    definition:
      kind: Node
      apiVersion: v1
      metadata:
        labels:
          node-role.kubernetes.io/infra: ""
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3
  loop: "{{ cluster_nodes }}"
  loop_control:
    loop_var: node_item

- name: Taint nodes - {{ node_item.name }}
  when: node_item.type in ["infra"]
  kubernetes.core.k8s_taint:
    state: present
    name: "{{ node_item.name }}"
    taints:
      - effect: NoExecute
        key: "node-role.kubernetes.io/infra"
        value: "reserved"
      - effect: NoSchedule
        key: "node-role.kubernetes.io/infra"
        value: "reserved"
  loop: "{{ cluster_nodes }}"
  loop_control:
    loop_var: node_item
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3

- name: Create the MachineConfigPool for the infra nodes
  kubernetes.core.k8s:
    state: present
    merge_type:
      - strategic-merge
      - merge
    definition:
      apiVersion: machineconfiguration.openshift.io/v1
      kind: MachineConfigPool
      metadata:
        name: infra
      spec:
        machineConfigSelector:
          matchExpressions:
            - {key: machineconfiguration.openshift.io/role, operator: In, values: [worker, infra]}
        nodeSelector:
          matchLabels:
            node-role.kubernetes.io/infra: ""
- name: Set the default Ingress Controller to run on the Infra Nodes
  kubernetes.core.k8s:
    state: present
    merge_type:
      - strategic-merge
      - merge
    definition:
      apiVersion: operator.openshift.io/v1
      kind: IngressController
      metadata:
        name: default
        namespace: openshift-ingress-operator
      spec:
        nodePlacement:
          nodeSelector:
            matchLabels:
              node-role.kubernetes.io/infra: ""
          tolerations:
            - effect: NoSchedule
              key: node-role.kubernetes.io/infra
              value: reserved
            - effect: NoExecute
              key: node-role.kubernetes.io/infra
              value: reserved

- name: Set the cluster monitoring to run on the Infra Nodes
  kubernetes.core.k8s:
    state: present
    merge_type:
      - strategic-merge
      - merge
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: cluster-monitoring-config
        namespace: openshift-monitoring
      data:
        config.yaml: |+
          alertmanagerMain:
            nodeSelector:
              node-role.kubernetes.io/infra: ""
            tolerations:
              - key: node-role.kubernetes.io/infra
                value: reserved
                effect: NoSchedule
              - key: node-role.kubernetes.io/infra
                value: reserved
                effect: NoExecute
          prometheusK8s:
            nodeSelector:
              node-role.kubernetes.io/infra: ""
            tolerations:
              - key: node-role.kubernetes.io/infra
                value: reserved
                effect: NoSchedule
              - key: node-role.kubernetes.io/infra
                value: reserved
                effect: NoExecute
          prometheusOperator:
            nodeSelector:
              node-role.kubernetes.io/infra: ""
            tolerations:
              - key: node-role.kubernetes.io/infra
                value: reserved
                effect: NoSchedule
              - key: node-role.kubernetes.io/infra
                value: reserved
                effect: NoExecute
          grafana:
            nodeSelector:
              node-role.kubernetes.io/infra: ""
            tolerations:
              - key: node-role.kubernetes.io/infra
                value: reserved
                effect: NoSchedule
              - key: node-role.kubernetes.io/infra
                value: reserved
                effect: NoExecute
          k8sPrometheusAdapter:
            nodeSelector:
              node-role.kubernetes.io/infra: ""
            tolerations:
              - key: node-role.kubernetes.io/infra
                value: reserved
                effect: NoSchedule
              - key: node-role.kubernetes.io/infra
                value: reserved
                effect: NoExecute
          kubeStateMetrics:
            nodeSelector:
              node-role.kubernetes.io/infra: ""
            tolerations:
              - key: node-role.kubernetes.io/infra
                value: reserved
                effect: NoSchedule
              - key: node-role.kubernetes.io/infra
                value: reserved
                effect: NoExecute
          telemeterClient:
            nodeSelector:
              node-role.kubernetes.io/infra: ""
            tolerations:
              - key: node-role.kubernetes.io/infra
                value: reserved
                effect: NoSchedule
              - key: node-role.kubernetes.io/infra
                value: reserved
                effect: NoExecute
          openshiftStateMetrics:
            nodeSelector:
              node-role.kubernetes.io/infra: ""
            tolerations:
              - key: node-role.kubernetes.io/infra
                value: reserved
                effect: NoSchedule
              - key: node-role.kubernetes.io/infra
                value: reserved
                effect: NoExecute
          thanosQuerier:
            nodeSelector:
              node-role.kubernetes.io/infra: ""
            tolerations:
              - key: node-role.kubernetes.io/infra
                value: reserved
                effect: NoSchedule
              - key: node-role.kubernetes.io/infra
                value: reserved
                effect: NoExecute
