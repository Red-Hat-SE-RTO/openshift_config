---
## =============================================================================================
## LDAP Sync Job
## =============================================================================================

- name: Create the LDAP Sync Job
  when: provider.group_sync is defined
  block:
    - name: Create a ServiceAccount for the LDAP Sync Job
      kubernetes.core.k8s:
        state: present
        merge_type:
          - strategic-merge
          - merge
        definition:
          kind: ServiceAccount
          apiVersion: v1
          metadata:
            name: ldap-group-syncer
            namespace: openshift-config
      register: ldap_group_syncer_sa
      retries: 30
      delay: 10
      until: ldap_group_syncer_sa is succeeded

    - name: Create the ClusterRole
      kubernetes.core.k8s:
        state: present
        merge_type:
          - strategic-merge
          - merge
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          metadata:
            name: ldap-group-syncer
            namespace: openshift-config
          rules:
            - apiGroups:
                - ''
                - user.openshift.io
              resources:
                - groups
              verbs:
                - get
                - list
                - create
                - update
      register: ldap_group_syncer_cr
      retries: 30
      delay: 10
      until: ldap_group_syncer_cr is succeeded

    - name: Create the ClusterRoleBinding
      kubernetes.core.k8s:
        state: present
        merge_type:
          - strategic-merge
          - merge
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: ldap-group-syncer
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: ldap-group-syncer
          subjects:
            - kind: ServiceAccount
              name: ldap-group-syncer
              namespace: openshift-config
      register: ldap_group_syncer_crb
      retries: 30
      delay: 10
      until: ldap_group_syncer_crb is succeeded

    - name: Create the ConfigMap to house the LDAPSync yaml - LDAP or ActiveDirectory
      kubernetes.core.k8s:
        state: present
        merge_type:
          - strategic-merge
          - merge
        definition:
          kind: ConfigMap
          apiVersion: v1
          metadata:
            name: ldap-group-syncer
            namespace: openshift-config
          data:
            sync.yaml: |
              {{ lookup('template', 'ldap-sync.yaml.j2') }}
      register: ldap_group_syncer_cm
      retries: 30
      delay: 10
      until: ldap_group_syncer_cm is succeeded

    - name: Create the ClusterRoleBinding for the Group Syncs
      kubernetes.core.k8s:
        state: present
        merge_type:
          - strategic-merge
          - merge
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: "{{ provider.name | lower | regex_replace('[^a-z0-9]', '') }}-group-sync"
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: "{{ crb.crb }}"
          subjects:
            - kind: Group
              name: "{{ crb.group }}"
              apiGroup: rbac.authorization.k8s.io
      loop: "{{ provider.group_sync.group_crbs }}"
      loop_control:
        loop_var: crb
      register: ldap_group_syncer_crb
      retries: 30
      delay: 10
      until: ldap_group_syncer_crb is succeeded

    - name: Create the CronJob to run the Sync, set it to run immediately
      kubernetes.core.k8s:
        state: present
        merge_type:
          - strategic-merge
          - merge
        definition:
          kind: CronJob
          apiVersion: batch/v1
          metadata:
            name: ldap-group-syncer
            namespace: openshift-config
          spec:
            schedule: "* * * * *"
            concurrencyPolicy: Forbid
            jobTemplate:
              spec:
                backoffLimit: 0
                ttlSecondsAfterFinished: 1800
                template:
                  spec:
                    containers:
                      - name: ldap-group-sync
                        image: "registry.redhat.io/openshift4/ose-cli:latest"
                        command:
                          - "/bin/bash"
                          - "-c"
                          - "oc adm groups sync --sync-config=/etc/config/sync.yaml --confirm"
                        volumeMounts:
                          - mountPath: "/etc/config"
                            name: "ldap-sync-volume"
                          - mountPath: "/etc/secrets"
                            name: "ldap-bind-password"
                          - mountPath: "/etc/ldap-ca"
                            name: "ldap-ca"
                    volumes:
                      - name: "ldap-sync-volume"
                        configMap:
                          name: "ldap-group-syncer"
                      - name: "ldap-bind-password"
                        secret:
                          secretName: "{{ provider.name | lower | regex_replace('[^a-z0-9]', '') }}-ldap-bind-password"
                      - name: "ldap-ca"
                        configMap:
                          name: "{{ provider.name | lower | regex_replace('[^a-z0-9]', '') }}-ldap-ca"
                    restartPolicy: "Never"
                    terminationGracePeriodSeconds: 30
                    activeDeadlineSeconds: 500
                    dnsPolicy: "ClusterFirst"
                    serviceAccountName: "ldap-group-syncer"
      register: ldap_group_syncer_cj
      retries: 30
      delay: 10
      until: ldap_group_syncer_cj is succeeded

    - name: Pause for 15 seconds to allow the LDAP Sync Job to start
      ansible.builtin.pause:
        seconds: 15

    - name: Set the CronJob to run the Sync to a 30min sync
      kubernetes.core.k8s:
        state: present
        merge_type:
          - strategic-merge
          - merge
        definition:
          kind: CronJob
          apiVersion: batch/v1
          metadata:
            name: ldap-group-syncer
            namespace: openshift-config
          spec:
            schedule: "*/30 * * * *"
            concurrencyPolicy: Forbid
            jobTemplate:
              spec:
                backoffLimit: 0
                ttlSecondsAfterFinished: 1800
                template:
                  spec:
                    containers:
                      - name: ldap-group-sync
                        image: "registry.redhat.io/openshift4/ose-cli:latest"
                        command:
                          - "/bin/bash"
                          - "-c"
                          - "oc adm groups sync --sync-config=/etc/config/sync.yaml --confirm"
                        volumeMounts:
                          - mountPath: "/etc/config"
                            name: "ldap-sync-volume"
                          - mountPath: "/etc/secrets"
                            name: "ldap-bind-password"
                          - mountPath: "/etc/ldap-ca"
                            name: "ldap-ca"
                    volumes:
                      - name: "ldap-sync-volume"
                        configMap:
                          name: "ldap-group-syncer"
                      - name: "ldap-bind-password"
                        secret:
                          secretName: "{{ provider.name | lower | regex_replace('[^a-z0-9]', '') }}-ldap-bind-password"
                      - name: "ldap-ca"
                        configMap:
                          name: "{{ provider.name | lower | regex_replace('[^a-z0-9]', '') }}-ldap-ca"
                    restartPolicy: "Never"
                    terminationGracePeriodSeconds: 30
                    activeDeadlineSeconds: 500
                    dnsPolicy: "ClusterFirst"
                    serviceAccountName: "ldap-group-syncer"
      retries: 120
      delay: 20
      register: cronjob_switch
      until: cronjob_switch is succeeded
